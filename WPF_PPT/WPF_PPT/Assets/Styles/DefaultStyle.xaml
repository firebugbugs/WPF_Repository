<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--以下为按钮样式...以下为按钮样式...以下为按钮样式...以下为按钮样式...以下为按钮样式-->
    <!--以下为按钮样式...以下为按钮样式...以下为按钮样式...以下为按钮样式...以下为按钮样式-->
    <!--导航栏按钮样式-->
    <ControlTemplate TargetType="Button" x:Key="btn_style_sidebar">
        <Border Background="Transparent" Name="sidebar">
            <TextBlock x:Name="symbol"
                Text="{TemplateBinding Content}"
                       FontSize="{TemplateBinding FontSize}"
                       Foreground="{TemplateBinding Foreground}"
                       FontFamily="../Fonts/#iconfont"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Center"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="symbol" Property="Foreground" Value="#AAAAAA"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="symbol" Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--主菜单按钮样式-->
    <Style TargetType="RadioButton" x:Key="radbtn_style_menu">
        <Setter Property="Margin" Value="15 10 10 10"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Background="Transparent" CornerRadius="8" x:Name="Back">
                        <ContentControl Content="{TemplateBinding Content}" FontSize="16"
                                        VerticalAlignment="Center" HorizontalAlignment="Center"
                                        Margin="10 15 10 15"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true" >
                            <Setter TargetName="Back" Property="Background" Value="#50FFFFFF" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Back" Property="Background" Value="#80FFFFFF"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" >
                            <Setter TargetName="Back" Property="Background" Value="#90FFFFFF" />
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--以下为动画...以下为动画...以下为动画...以下为动画...以下为动画...以下为动画-->
    <!--以下为动画...以下为动画...以下为动画...以下为动画...以下为动画...以下为动画-->
    <!--侧边栏呼出动画-->
    <Storyboard x:Key="story_sidebaropen">
        <DoubleAnimation Duration="0:0:0.2" To="0"
                         Storyboard.TargetName="sidebar"
                         Storyboard.TargetProperty="X"/>
        <DoubleAnimation Duration="0:0:0.1" To="0"
                         Storyboard.TargetName="btn_sidebar"
                         Storyboard.TargetProperty="Opacity"/>
    </Storyboard>
    <!--侧边栏关闭动画-->
    <Storyboard x:Key="story_sidebarclose">
        <DoubleAnimation Duration="0:0:0.1"
                         Storyboard.TargetName="sidebar"
                         Storyboard.TargetProperty="X"/>
        <DoubleAnimation Duration="0:0:0.2" To="1"
                         Storyboard.TargetName="btn_sidebar"
                         Storyboard.TargetProperty="Opacity"/>
    </Storyboard>

    <!--以下为右键菜单...以下为右键菜单...以下为右键菜单...以下为右键菜单...以下为右键菜单-->
    <!--以下为右键菜单...以下为右键菜单...以下为右键菜单...以下为右键菜单...以下为右键菜单-->
    <ContextMenu x:Key="ChildMenu">
        <MenuItem Header="截图" FontSize="18" Foreground="#333333" FontWeight="Light"
                  Command="{Binding Screenshot}"
                  >
        </MenuItem>
        <MenuItem Header="关于这个PPT" FontSize="18" Foreground="#333333" FontWeight="Light"
                  Command="{Binding OpenAbout}"
                  >
        </MenuItem>
    </ContextMenu>
    
    <!--自定义ContextMenu的外观样式-->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property ="Focusable" Value="False"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border 
                      Name="Border"
                      Background="#50BBBBBB"
                      BorderBrush="#50CCCCCC"
                      BorderThickness="2" >
                        <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="Padding" Value="0,3,0,3"/>
                            <Setter TargetName="Border" Property="CornerRadius" Value="4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--自定义菜单项之间的分隔符的样式-->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="#888888" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
                Margin="6,3,6,3" 
                ContentSource="Header"
                RecognizesAccessKey="True" />
                <Popup 
                Name="Popup"
                Placement="Bottom"
                IsOpen="{TemplateBinding IsSubmenuOpen}"
                AllowsTransparency="True" 
                Focusable="False"
                PopupAnimation="Slide">
                    <Border 
                  Name="SubmenuBorder"
                  SnapsToDevicePixels="True"
                  Background="#FFFFFF"
                  BorderBrush="#888888"
                  BorderThickness="1" >
                        <StackPanel  
                    IsItemsHost="True" 
                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#666666"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate 
      x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
      TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
                Margin="20,3,6,10" 
                ContentSource="Header"
                RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="Blue"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem 自定义菜单项的外观样式-->
    <ControlTemplate 
   x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
   TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                Name="Icon"
                Margin="6,2,6,2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ContentSource="Icon"/>
                <Border 
                Name="Check"  
                Width="13" Height="13" 
                Visibility="Hidden"
                Margin="6,0,6,0" 
                Background="#C0C0C0"
                BorderThickness="1"
                BorderBrush="#404040">
                    <Path 
                  Name="CheckMark"
                  Width="7" Height="7" 
                  Visibility="Visible" 
                  SnapsToDevicePixels="False" 
                  Stroke="#404040"
                  StrokeThickness="1"
                  Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter 
                Name="HeaderHost"
                Grid.Column="1"
                ContentSource="Header"
                RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                Grid.Column="2"
                Background="Green"
                Text="{TemplateBinding InputGestureText}"
                Margin="5,2,0,2"
                DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Hidden"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <!--选中菜单项时的高亮颜色的trigger设置-->
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#50EEEEEE"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="Yellow"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuHeader -->

    <ControlTemplate 
    x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
    TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                Name="Icon"
                Margin="6,0,6,0"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                ContentSource="Icon"/>
                <ContentPresenter 
                Name="HeaderHost"
                Grid.Column="1"
                ContentSource="Header"
                RecognizesAccessKey="True"/>
                <TextBlock x:Name="InputGestureText"
                Grid.Column="2"
                Text="{TemplateBinding InputGestureText}"
                Margin="5,2,2,2"
                DockPanel.Dock="Right"/>
                <Path 
                Grid.Column="3"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 0 7 L 4 3.5 Z" 
                Fill="#404040" />
                <Popup 
                Name="Popup"
                Placement="Left"
                HorizontalOffset="-4" 
                IsOpen="{TemplateBinding IsSubmenuOpen}"
                AllowsTransparency="True" 
                Focusable="False"
                PopupAnimation="Slide">
                    <Border 
                  Name="SubmenuBorder"
                  SnapsToDevicePixels="True"
                  Background="#FFFFFF"
                  BorderBrush="#888888"
                  BorderThickness="1" >
                        <StackPanel  
                      IsItemsHost="True" 
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#EEEEEE"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888888"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>